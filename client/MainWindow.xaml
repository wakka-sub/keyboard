<Window x:Class="KeymapperGui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KeymapperGui"
        mc:Ignorable="d"
        Title="Arduino HID Key Mapper (Commander Mode)" Height="700" Width="750"
        >

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </Window.Resources>

    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock x:Name="StatusTextBlock" Text="Disconnected"/>
            </StatusBarItem>
        </StatusBar>

        <StackPanel Margin="10">
            <GroupBox Header="Connection">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="ComPortComboBox" Margin="5"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Button x:Name="RefreshButton" Content="Refresh" Margin="5" Padding="10,2" Click="RefreshButton_Click"/>
                        <Button x:Name="ConnectButton" Content="Connect" Margin="5" Padding="10,2" Click="ConnectButton_Click"/>
                        <Button x:Name="DisconnectButton" Content="Disconnect" Margin="5" Padding="10,2" IsEnabled="False" Click="DisconnectButton_Click"/>
                    </StackPanel>
                </Grid>
            </GroupBox>

            <Grid Grid.IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <GroupBox Header="Key Mappings" Grid.Row="0" Margin="0,10,0,0">
                    <ItemsControl x:Name="KeyMappingItemsControl" IsEnabled="False">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="5,3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="LabelColumn"/>
                                        <ColumnDefinition Width="130"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Content="{Binding Label}" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0" Target="{Binding ElementName=AssignmentTypeComboBox}"/>

                                    <ComboBox x:Name="AssignmentTypeComboBox" Grid.Column="1" VerticalAlignment="Center"
                                              ItemsSource="{Binding AssignmentTypes}"
                                              SelectedItem="{Binding SelectedType, UpdateSourceTrigger=PropertyChanged}"/>

                                    <TextBox Grid.Column="2" VerticalAlignment="Center" Margin="5,0"
                                             Text="{Binding KeyCombinationText, Mode=OneWay}"
                                             IsReadOnly="True" ToolTip="Click and press keys to assign. Use Backspace to correct."
                                             GotFocus="KeyTextBox_GotFocus"
                                             LostFocus="KeyTextBox_LostFocus"
                                             PreviewKeyDown="KeyTextBox_PreviewKeyDown"
                                             Visibility="{Binding IsKeyType, Converter={StaticResource BoolToVis}}"/>

                                    <ComboBox Grid.Column="2" VerticalAlignment="Center" Margin="5,0"
                                              ItemsSource="{Binding Source={x:Static local:HidKeyCodes.SpecialKeys}}"
                                              SelectedItem="{Binding SelectedSpecialKey, UpdateSourceTrigger=PropertyChanged}"
                                              DisplayMemberPath="Name"
                                              Visibility="{Binding IsSpecialKeyType, Converter={StaticResource BoolToVis}}"/>

                                    <TextBox Grid.Column="2" VerticalAlignment="Center" Margin="5,0"
                                             Text="{Binding CommandText, UpdateSourceTrigger=PropertyChanged}"
                                             ToolTip="Enter the command or application path to execute."
                                             Visibility="{Binding IsCommandType, Converter={StaticResource BoolToVis}}"/>

                                    <Button Grid.Column="3" Content="Clear"
                                            Click="ClearButton_Click" ToolTip="Clear this assignment."/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </GroupBox>
            </Grid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                <Button x:Name="ReadButton" Content="Read from Device" Margin="5" Padding="15,5" IsEnabled="False" Click="ReadButton_Click"/>
                <Button x:Name="WriteButton" Content="Write to Device" Margin="5" Padding="15,5" IsEnabled="False" Click="WriteButton_Click"/>
            </StackPanel>
        </StackPanel>
    </DockPanel>
</Window>